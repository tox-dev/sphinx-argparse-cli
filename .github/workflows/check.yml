name: check
on:
  push:
  pull_request:
  schedule:
    - cron: "0 8 * * *"

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: test on CPython ${{ matrix.py }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        py:
          - "3.10"
          - 3.9
          - 3.8
          - 3.7
    steps:
      - name: setup python for tox
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: install tox
        run: python -m pip install tox
      - uses: actions/checkout@v3
      - name: setup python for test ${{ matrix.py }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}
      - name: pick environment to run
        run: |
          import subprocess; import json; import os
          major, minor, impl = json.loads(subprocess.check_output(["python", "-c", "import json; import sys; import platform; print(json.dumps([sys.version_info[0], sys.version_info[1], platform.python_implementation()]));"], universal_newlines=True))
          with open(os.environ['GITHUB_ENV'], 'a') as file_handler:
                file_handler.write('TOXENV=' + ("py" if impl == "CPython" else "pypy") + ("{}{}".format(major, minor) if impl == "CPython" else ("3" if major == 3 else "")) + "\n")
        shell: python
      - name: setup test suite
        run: tox -vv --notest
      - name: run test suite
        run: tox --skip-pkg-install
        env:
          PYTEST_ADDOPTS: "-vv --durations=20"
          CI_RUN: "yes"
          DIFF_AGAINST: HEAD

  check:
    name: tox env ${{ matrix.tox_env }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        tox_env:
          - type
          - dev
          - pkg_check
    steps:
      - uses: actions/checkout@v3
      - name: setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: install tox
        run: python -m pip install tox
      - name: run check for ${{ matrix.tox_env }}
        run: python -m tox -e ${{ matrix.tox_env }}
        env:
          UPGRADE_ADVISORY: "yes"

  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [check, test]
    runs-on: ubuntu-22.04
    steps:
      - name: setup python to build package
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: install build
        run: python -m pip install build
      - uses: actions/checkout@v3
      - name: build package
        run: python -m build --sdist --wheel . -o dist
      - name: publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.pypi_password }}
