[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs>=0.4",
  "hatchling>=1.25",
]

[project]
name = "sphinx-argparse-cli"
description = "render CLI arguments (sub-commands friendly) defined by argparse module"
readme = "README.md"
keywords = [
  "argparse",
  "sphinx",
]
license = "MIT"
maintainers = [
  { name = "Bernat Gabor", email = "gaborjbernat@gmail.com" },
] # noqa: E999
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Framework :: Sphinx",
  "Framework :: Sphinx :: Extension",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Documentation",
  "Topic :: Documentation :: Sphinx",
]
dynamic = [
  "version",
]
dependencies = [
  "sphinx>=8.0.2",
]
optional-dependencies.testing = [
  "covdefaults>=2.3",
  "defusedxml>=0.7.1", # needed for sphinx.testing
  "pytest>=8.3.2",
  "pytest-cov>=5",
]
urls.Documentation = "https://github.com/tox-dev/sphinx-argparse-cli#sphinx-argparse-cli"
urls.Homepage = "https://github.com/tox-dev/sphinx-argparse-cli"
urls.Source = "https://github.com/tox-dev/sphinx-argparse-cli"
urls.Tracker = "https://github.com/tox-dev/sphinx-argparse-cli/issues"

[tool.hatch]
build.hooks.vcs.version-file = "src/sphinx_argparse_cli/version.py"
build.targets.sdist.include = [
  "/src",
  "/tests",
]
version.source = "vcs"

[tool.black]
line-length = 120

[tool.ruff]
target-version = "py310"
line-length = 120
format.preview = true
format.docstring-code-line-length = 100
format.docstring-code-format = true
lint.select = [
  "ALL",
]
lint.ignore = [
  "ANN101", # no type annotation for self
  "ANN401", # allow Any as type annotation
  "COM812", # Conflict with formatter
  "CPY",    # No copyright statements
  "D203",   # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
  "D212",   # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible
  "DOC",    # not yet supported
  "ISC001", # Conflict with formatter
  "S104",   # Possible binding to all interface
]

lint.per-file-ignores."roots/**/*.py" = [
  "D",      # no docs
  "INP001", # no namespace
]
lint.per-file-ignores."tests/**/*.py" = [
  "D",       # don't care about documentation in tests
  "FBT",     # don't care about booleans as positional arguments in tests
  "INP001",  # no implicit namespace
  "PLC2701", # private import
  "PLR0913", # any number of arguments in tests
  "PLR0917", # any number of arguments in tests
  "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
  "S101",    # asserts allowed in tests
  "S603",    # `subprocess` call: check for execution of untrusted input
]
lint.isort = { known-first-party = [
  "sphinx_argparse_cli",
], required-imports = [
  "from __future__ import annotations",
] }

[tool.codespell]
builtin = "clear,usage,en-GB_to_en-US"
count = true

[tool.pyproject-fmt]
max_supported_python = "3.13"

[tool.coverage]
html.show_contexts = true
html.skip_covered = false
paths.source = [
  "src",
  "**/site-packages",
]
report.fail_under = 76
run.dynamic_context = "test_function"
run.parallel = true
run.plugins = [
  "covdefaults",
]
run.relative_files = true

[tool.mypy]
python_version = "3.12"
show_error_codes = true
strict = true
