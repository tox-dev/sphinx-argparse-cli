[tox]
envlist =
    fix
    py310
    py39
    py38
    py37
    type
    pkg_check
isolated_build = true
skip_missing_interpreters = true
minversion = 3.14.0

[testenv]
description = run the unit tests with pytest under {basepython}
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
    COVERAGE_PROCESS_START = {toxinidir}/setup.cfg
    _COVERAGE_SRC = {envsitepackagesdir}/sphinx_argparse_cli
extras =
    test
commands =
    pytest {tty:--color=yes} {posargs: \
      --junitxml {toxworkdir}{/}junit.{envname}.xml --cov {envsitepackagesdir}{/}sphinx_argparse_cli \
      --cov {toxinidir}{/}tests --cov-fail-under=100 \
      --cov-config=pyproject.toml --no-cov-on-fail --cov-report term-missing:skip-covered --cov-context=test \
      --cov-report html:{envtmpdir}{/}htmlcov --cov-report xml:{toxworkdir}{/}coverage.{envname}.xml \
      tests}
package = wheel
wheel_build_env = .pkg

[testenv:fix]
description = run static analysis and style check using flake8
passenv =
    HOMEPATH
    PROGRAMDATA
basepython = python3.10
skip_install = true
deps =
    pre-commit>=3.0.4
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'print("hint: run {envdir}/bin/pre-commit install to add checks as pre-commit hook")'

[testenv:type]
description = run type check on code base
setenv =
    {tty:MYPY_FORCE_COLOR = 1}
deps =
    mypy==0.991
    types-docutils>=0.19.1.2
commands =
    mypy src
    mypy tests

[testenv:pkg_check]
description = check that the long description is valid
basepython = python3.10
skip_install = true
deps =
    build[virtualenv]>=0.10
    twine>=4.0.2
changedir = {toxinidir}
commands =
    python -m build --sdist --wheel -o {envtmpdir} .
    twine check {envtmpdir}/*

[testenv:dev]
description = generate a DEV environment
basepython = python3.10
usedevelop = true
extras =
    docs
    test
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'
